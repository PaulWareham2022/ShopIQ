require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

if podfile_properties.key?('newArchEnabled')
  ENV['RCT_NEW_ARCH_ENABLED'] = (podfile_properties['newArchEnabled'].to_s == 'true') ? '1' : '0'
end
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = (podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] || '0').to_s

platform :ios, podfile_properties['ios.deploymentTarget'] || '17.0'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'ShopIQ' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  fw_val = podfile_properties['ios.useFrameworks'] || ENV['USE_FRAMEWORKS']
  if fw_val
    normalized = fw_val.to_s.strip.downcase
    case normalized
    when 'static' then use_frameworks! :linkage => :static
    when 'dynamic' then use_frameworks! :linkage => :dynamic
    when '1', 'true', 'yes' then use_frameworks!
    when '0', 'false', 'no' then # no frameworks
    else
      puts "[Podfile] Unrecognized USE_FRAMEWORKS='#{fw_val}', defaulting to dynamic frameworks"
      use_frameworks!
    end
  end

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
